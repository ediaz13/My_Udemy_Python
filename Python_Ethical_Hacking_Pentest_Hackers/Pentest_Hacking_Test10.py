
# Here's a simple Python script that performs a basic port scan on a specified range of ports for a given IP address using the `socket` library:

import socket

def port_scan(ip, start_port, end_port):
    print(f"Scanning ports {start_port} to {end_port} on {ip}...\n")

    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)

        try:
            result = sock.connect_ex((ip, port))
            if result == 0:
                print(f"Port {port} is open")
            else:
                print(f"Port {port} is closed")
            sock.close()
        except KeyboardInterrupt:
            print("\nExiting...")
            exit()
        except socket.gaierror:
            print("Hostname could not be resolved. Exiting...")
            exit()
        except socket.error:
            print("Could not connect to server")
            exit()

def main():
    ip_address = input("Enter the IP address or hostname to scan: ")
    start_port = int(input("Enter the starting port number: "))
    end_port = int(input("Enter the ending port number: "))

    port_scan(ip_address, start_port, end_port)

if __name__ == "__main__":
    main()

# This script prompts the user to input the IP address or hostname of the target server, as well as the range of ports to scan. It then performs a port scan on the specified range of ports using the `socket.connect_ex()` method. If a connection to the port is successful (`result == 0`), it prints that the port is open; otherwise, it prints that the port is closed.

